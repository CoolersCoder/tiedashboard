/// <reference path="../../observable.d.ts" />
/// <reference path="../../concurrency/scheduler.d.ts" />
declare module Rx {
    interface TimeInterval<T> {
        value: T;
        interval: number;
    }
    interface Observable<T> {
        /**
        *  Records the time interval between consecutive values in an observable sequence.
        *
        * @example
        *  1 - res = source.timeInterval();
        *  2 - res = source.timeInterval(Rx.Scheduler.timeout);
        *
        * @param [scheduler]  Scheduler used to compute time intervals. If not specified, the timeout scheduler is used.
        * @returns {Observable} An observable sequence with time interval information on values.
        */
        timeInterval(scheduler?: IScheduler): Observable<TimeInterval<T>>;
    }
}
